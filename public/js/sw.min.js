"use strict";var cacheName="v1",dbName="restaurandDb";"undefined"==typeof idb&&self.importScripts("idb.min.js");var dbPromise=idb.open(dbName,1,function(t){t.createObjectStore("restaurants")}),urlList=["/","/index.html","/restaurant.html","/public/css/main.min.css","/public/js/main.min.js","/public/js/restaurant_info.min.js","/public/js/dbhelper.min.js","/public/js/idb.min.js","/public/img/1.jpg","/public/img/2.jpg","/public/img/3.jpg","/public/img/4.jpg","/public/img/5.jpg","/public/img/6.jpg","/public/img/7.jpg","/public/img/8.jpg","/public/img/9.jpg","/public/img/10.jpg"];self.addEventListener("install",function(t){t.waitUntil(caches.open(cacheName).then(function(t){t.addAll(urlList,{mode:"no-cors"})}))}),self.addEventListener("fetch",function(t){var e=t.request;e.url.includes("localhost:1337")?t.respondWith(dbPromise.then(function(t){t.transaction("restaurants").objectStore("restaurants").get(0)}).then(function(t){return t?(t=JSON.stringify(t),new Response(t,{status:200})):fetch(e).then(function(t){return t.clone().json().then(function(n){dbPromise.then(function(t){t.transaction("restaurants","readwrite").objectStore("restaurants").put(n,0)})}),t})})):t.respondWith(caches.match(e).then(function(t){return t||fetch(e).then(function(t){var n=t.clone();return caches.open(cacheName).then(function(t){return t.put(e,n)}),t})}))});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN3LmpzIl0sIm5hbWVzIjpbImNhY2hlTmFtZSIsImRiTmFtZSIsImlkYiIsInNlbGYiLCJpbXBvcnRTY3JpcHRzIiwiZGJQcm9taXNlIiwib3BlbiIsInVwZ3JhZGVEQiIsImNyZWF0ZU9iamVjdFN0b3JlIiwidXJsTGlzdCIsImFkZEV2ZW50TGlzdGVuZXIiLCJldmVudCIsIndhaXRVbnRpbCIsImNhY2hlcyIsInRoZW4iLCJjYWNoZSIsImFkZEFsbCIsIm1vZGUiLCJyZXF1ZXN0IiwidXJsIiwiaW5jbHVkZXMiLCJyZXNwb25kV2l0aCIsImRiIiwidHJhbnNhY3Rpb24iLCJvYmplY3RTdG9yZSIsImdldCIsImRhdGEiLCJKU09OIiwic3RyaW5naWZ5IiwiUmVzcG9uc2UiLCJzdGF0dXMiLCJmZXRjaCIsInJlc3BvbnNlIiwiY2xvbmUiLCJqc29uIiwicmVzdGF1cmFudHMiLCJwdXQiLCJtYXRjaCIsImNsb25lUmVzcG9uc2UiXSwibWFwcGluZ3MiOiJhQUFBLElBQUlBLFVBQVksS0FDWkMsT0FBUyxlQUVNLG9CQUFSQyxLQUNUQyxLQUFLQyxjQUFjLGNBR3JCLElBQUlDLFVBQVlILElBQUlJLEtBQUtMLE9BQVEsRUFBRyxTQUFBTSxHQUNqQkEsRUFBVUMsa0JBQWtCLGlCQUd6Q0MsUUFBVSxDQUNkLElBQ0EsY0FDQSxtQkFDQSwyQkFDQSx5QkFDQSxvQ0FDQSw2QkFDQSx3QkFDQSxvQkFDQSxvQkFDQSxvQkFDQSxvQkFDQSxvQkFDQSxvQkFDQSxvQkFDQSxvQkFDQSxvQkFDQSxzQkFHRk4sS0FBS08saUJBQWlCLFVBQVcsU0FBQUMsR0FDL0JBLEVBQU1DLFVBQ0pDLE9BQU9QLEtBQUtOLFdBQVdjLEtBQUssU0FBQUMsR0FDMUJBLEVBQU1DLE9BQU9QLFFBQVMsQ0FDcEJRLEtBQU0saUJBTWRkLEtBQUtPLGlCQUFpQixRQUFTLFNBQUFDLEdBQzdCLElBQUlPLEVBQVVQLEVBQU1PLFFBRWhCQSxFQUFRQyxJQUFJQyxTQUFTLGtCQUN2QlQsRUFBTVUsWUFDSmhCLFVBQ0dTLEtBQUssU0FBQVEsR0FDT0EsRUFBR0MsWUFBWSxlQUNMQyxZQUFZLGVBQ1JDLElBQUksS0FFOUJYLEtBQUssU0FBQVksR0FDSixPQUFJQSxHQUNGQSxFQUFPQyxLQUFLQyxVQUFVRixHQUNILElBQUlHLFNBQVNILEVBQU0sQ0FDcENJLE9BQVEsT0FJSEMsTUFBTWIsR0FBU0osS0FBSyxTQUFBa0IsR0FTekIsT0FSc0JBLEVBQVNDLFFBQ2pCQyxPQUFPcEIsS0FBSyxTQUFBcUIsR0FDeEI5QixVQUFVUyxLQUFLLFNBQUFRLEdBQ2JBLEVBQUdDLFlBQVksY0FBZSxhQUMzQkMsWUFBWSxlQUNaWSxJQUFJRCxFQUFhLE9BR2pCSCxPQU1qQnJCLEVBQU1VLFlBQ0pSLE9BQU93QixNQUFNbkIsR0FBU0osS0FBSyxTQUFBa0IsR0FDekIsT0FBSUEsR0FHR0QsTUFBTWIsR0FBU0osS0FBSyxTQUFBa0IsR0FDekIsSUFBTU0sRUFBZ0JOLEVBQVNDLFFBSS9CLE9BSEFwQixPQUNHUCxLQUFLTixXQUNMYyxLQUFLLFNBQUFDLEdBQUssT0FBSUEsRUFBTXFCLElBQUlsQixFQUFTb0IsS0FDN0JOIiwiZmlsZSI6InN3Lm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImxldCBjYWNoZU5hbWUgPSAndjEnXHJcbmxldCBkYk5hbWUgPSAncmVzdGF1cmFuZERiJ1xyXG5cclxuaWYgKHR5cGVvZiBpZGIgPT09ICd1bmRlZmluZWQnKSB7XHJcbiAgc2VsZi5pbXBvcnRTY3JpcHRzKCdpZGIubWluLmpzJylcclxufVxyXG5cclxudmFyIGRiUHJvbWlzZSA9IGlkYi5vcGVuKGRiTmFtZSwgMSwgdXBncmFkZURCID0+IHtcclxuICBjb25zdCBvYmpTdG9yZSA9IHVwZ3JhZGVEQi5jcmVhdGVPYmplY3RTdG9yZSgncmVzdGF1cmFudHMnKVxyXG59KVxyXG5cclxuY29uc3QgdXJsTGlzdCA9IFtcclxuICAnLycsXHJcbiAgJy9pbmRleC5odG1sJyxcclxuICAnL3Jlc3RhdXJhbnQuaHRtbCcsXHJcbiAgJy9wdWJsaWMvY3NzL21haW4ubWluLmNzcycsXHJcbiAgJy9wdWJsaWMvanMvbWFpbi5taW4uanMnLFxyXG4gICcvcHVibGljL2pzL3Jlc3RhdXJhbnRfaW5mby5taW4uanMnLFxyXG4gICcvcHVibGljL2pzL2RiaGVscGVyLm1pbi5qcycsXHJcbiAgJy9wdWJsaWMvanMvaWRiLm1pbi5qcycsXHJcbiAgJy9wdWJsaWMvaW1nLzEuanBnJyxcclxuICAnL3B1YmxpYy9pbWcvMi5qcGcnLFxyXG4gICcvcHVibGljL2ltZy8zLmpwZycsXHJcbiAgJy9wdWJsaWMvaW1nLzQuanBnJyxcclxuICAnL3B1YmxpYy9pbWcvNS5qcGcnLFxyXG4gICcvcHVibGljL2ltZy82LmpwZycsXHJcbiAgJy9wdWJsaWMvaW1nLzcuanBnJyxcclxuICAnL3B1YmxpYy9pbWcvOC5qcGcnLFxyXG4gICcvcHVibGljL2ltZy85LmpwZycsXHJcbiAgJy9wdWJsaWMvaW1nLzEwLmpwZydcclxuXVxyXG5cclxuc2VsZi5hZGRFdmVudExpc3RlbmVyKCdpbnN0YWxsJywgZXZlbnQgPT4ge1xyXG4gIGV2ZW50LndhaXRVbnRpbChcclxuICAgIGNhY2hlcy5vcGVuKGNhY2hlTmFtZSkudGhlbihjYWNoZSA9PiB7XHJcbiAgICAgIGNhY2hlLmFkZEFsbCh1cmxMaXN0LCB7XHJcbiAgICAgICAgbW9kZTogJ25vLWNvcnMnXHJcbiAgICAgIH0pXHJcbiAgICB9KVxyXG4gIClcclxufSlcclxuXHJcbnNlbGYuYWRkRXZlbnRMaXN0ZW5lcignZmV0Y2gnLCBldmVudCA9PiB7XHJcbiAgbGV0IHJlcXVlc3QgPSBldmVudC5yZXF1ZXN0XHJcblxyXG4gIGlmIChyZXF1ZXN0LnVybC5pbmNsdWRlcygnbG9jYWxob3N0OjEzMzcnKSkge1xyXG4gICAgZXZlbnQucmVzcG9uZFdpdGgoXHJcbiAgICAgIGRiUHJvbWlzZVxyXG4gICAgICAgIC50aGVuKGRiID0+IHtcclxuICAgICAgICAgIGNvbnN0IHR4ID0gZGIudHJhbnNhY3Rpb24oJ3Jlc3RhdXJhbnRzJylcclxuICAgICAgICAgIGNvbnN0IHJlc3RTdG9yZSA9IHR4Lm9iamVjdFN0b3JlKCdyZXN0YXVyYW50cycpXHJcbiAgICAgICAgICBjb25zdCBkYkRhdGEgPSByZXN0U3RvcmUuZ2V0KDApXHJcbiAgICAgICAgfSlcclxuICAgICAgICAudGhlbihkYXRhID0+IHtcclxuICAgICAgICAgIGlmIChkYXRhKSB7XHJcbiAgICAgICAgICAgIGRhdGEgPSBKU09OLnN0cmluZ2lmeShkYXRhKVxyXG4gICAgICAgICAgICBjb25zdCBteVJlc3BvbnNlID0gbmV3IFJlc3BvbnNlKGRhdGEsIHtcclxuICAgICAgICAgICAgICBzdGF0dXM6IDIwMFxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICByZXR1cm4gbXlSZXNwb25zZVxyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIGZldGNoKHJlcXVlc3QpLnRoZW4ocmVzcG9uc2UgPT4ge1xyXG4gICAgICAgICAgICAgIGNvbnN0IGNsb25lUmVzcG9uc2UgPSByZXNwb25zZS5jbG9uZSgpXHJcbiAgICAgICAgICAgICAgY2xvbmVSZXNwb25zZS5qc29uKCkudGhlbihyZXN0YXVyYW50cyA9PiB7XHJcbiAgICAgICAgICAgICAgICBkYlByb21pc2UudGhlbihkYiA9PiB7XHJcbiAgICAgICAgICAgICAgICAgIGRiLnRyYW5zYWN0aW9uKCdyZXN0YXVyYW50cycsICdyZWFkd3JpdGUnKVxyXG4gICAgICAgICAgICAgICAgICAgIC5vYmplY3RTdG9yZSgncmVzdGF1cmFudHMnKVxyXG4gICAgICAgICAgICAgICAgICAgIC5wdXQocmVzdGF1cmFudHMsIDApXHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgIClcclxuICB9IGVsc2Uge1xyXG4gICAgZXZlbnQucmVzcG9uZFdpdGgoXHJcbiAgICAgIGNhY2hlcy5tYXRjaChyZXF1ZXN0KS50aGVuKHJlc3BvbnNlID0+IHtcclxuICAgICAgICBpZiAocmVzcG9uc2UpIHtcclxuICAgICAgICAgIHJldHVybiByZXNwb25zZVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gZmV0Y2gocmVxdWVzdCkudGhlbihyZXNwb25zZSA9PiB7XHJcbiAgICAgICAgICBjb25zdCBjbG9uZVJlc3BvbnNlID0gcmVzcG9uc2UuY2xvbmUoKVxyXG4gICAgICAgICAgY2FjaGVzXHJcbiAgICAgICAgICAgIC5vcGVuKGNhY2hlTmFtZSlcclxuICAgICAgICAgICAgLnRoZW4oY2FjaGUgPT4gY2FjaGUucHV0KHJlcXVlc3QsIGNsb25lUmVzcG9uc2UpKVxyXG4gICAgICAgICAgcmV0dXJuIHJlc3BvbnNlXHJcbiAgICAgICAgfSlcclxuICAgICAgfSlcclxuICAgIClcclxuICB9XHJcbn0pIl19
