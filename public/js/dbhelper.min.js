"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function _createClass(e,t,n){return t&&_defineProperties(e.prototype,t),n&&_defineProperties(e,n),e}var DBHelper=function(){function r(){_classCallCheck(this,r)}return _createClass(r,null,[{key:"fetchRestaurants",value:function(n){fetch("".concat(r.DATABASE_URL,"/restaurants")).then(function(e){if(200===e.status)e.json().then(function(e){n(null,e)});else{var t="Request failed. Returned status of ".concat(xhr.status);n(t,null)}}).catch(function(e){})}},{key:"fetchReviews",value:function(n){fetch("".concat(r.DATABASE_URL,"/reviews")).then(function(e){if(200===e.status)e.json().then(function(e){n(null,e)});else{var t="Request failed. Returned status of ".concat(xhr.status);n(t,null)}}).catch(function(e){})}},{key:"fetchRestaurantById",value:function(a,o){r.fetchRestaurants(function(e,t){if(e)o(e,null);else{var n=t.find(function(e){return e.id==a});n?o(null,n):o("Restaurant does not exist",null)}})}},{key:"fetchReviewsByRestaurantId",value:function(e,n){fetch("".concat(r.DATABASE_URL,"/reviews/?restaurant_id=").concat(e)).then(function(e){if(200===e.status)e.json().then(function(e){n(null,e)});else{var t="Request failed. Returned status of ".concat(xhr.status);n(t,null)}}).catch(function(e){})}},{key:"fetchRestaurantByCuisine",value:function(a,o){r.fetchRestaurants(function(e,t){if(e)o(e,null);else{var n=t.filter(function(e){return e.cuisine_type==a});o(null,n)}})}},{key:"fetchRestaurantByNeighborhood",value:function(a,o){r.fetchRestaurants(function(e,t){if(e)o(e,null);else{var n=t.filter(function(e){return e.neighborhood==a});o(null,n)}})}},{key:"fetchRestaurantByCuisineAndNeighborhood",value:function(a,o,i){r.fetchRestaurants(function(e,t){if(e)i(e,null);else{var n=t;"all"!=a&&(n=n.filter(function(e){return e.cuisine_type==a})),"all"!=o&&(n=n.filter(function(e){return e.neighborhood==o})),i(null,n)}})}},{key:"fetchNeighborhoods",value:function(o){r.fetchRestaurants(function(e,n){if(e)o(e,null);else{var a=n.map(function(e,t){return n[t].neighborhood}),t=a.filter(function(e,t){return a.indexOf(e)==t});o(null,t)}})}},{key:"fetchCuisines",value:function(o){r.fetchRestaurants(function(e,n){if(e)o(e,null);else{var a=n.map(function(e,t){return n[t].cuisine_type}),t=a.filter(function(e,t){return a.indexOf(e)==t});o(null,t)}})}},{key:"urlForRestaurant",value:function(e){return"./restaurant.html?id=".concat(e.id)}},{key:"imageUrlForRestaurant",value:function(e){return"public/img/".concat(e.id,".jpg")}},{key:"imageAltforRestaurant",value:function(e){return e.imageAlt}},{key:"mapMarkerForRestaurant",value:function(e,t){var n=new L.marker([e.latlng.lat,e.latlng.lng],{title:e.name,alt:e.name,url:r.urlForRestaurant(e)});return n.addTo(newMap),n}},{key:"sendToggleFav",value:function(t,n){var a=this;navigator.onLine?fetch("http://localhost:1337/restaurants/".concat(t,"/?is_favorite=").concat(n),{method:"PUT",mode:"cors",cache:"no-cache",credentials:"same-origin",headers:new Headers({"Content-Type":"application/json"})}).then(function(e){return a.setFavoriteLocalDb({id:t,is_favorite:n})}).catch(function(){a.setFavoriteLocalDb({id:t-1,is_favorite:n})}):(console.log(t),console.log(n),this.setFavoriteLocalDb({id:t,is_favorite:n}))}},{key:"fetchLocalDb",value:function(t,n){return this.dbPromise.then(function(e){return e.transaction(t).objectStore(t).get(n)})}},{key:"putLocalDb",value:function(t,n,a){this.dbPromise.then(function(e){e.transaction(n,"readwrite").objectStore(n).put(t,a)}).catch(function(e){console.log(e)})}},{key:"setFavoriteLocalDb",value:function(t){var n=this,a=t.id-1;this.fetchLocalDb("restaurants",0).then(function(e){e[a].is_favorite=t.is_favorite,n.putLocalDb(e,"restaurants",0)})}},{key:"addReview",value:function(e){var t=this;navigator.onLine?fetch("http://localhost:1337/reviews/",{method:"POST",mode:"cors",cache:"no-cache",credentials:"same-origin",headers:new Headers({"Content-Type":"application/json"}),body:JSON.stringify(e)}).then(function(e){t.storeReviewLocalDb(e)}).catch(function(){t.storeReviewLocalDb(e)}):this.storeReviewLocalDb(e)}},{key:"storeReviewLocalDb",value:function(t){var n=this,a=t.restaurant_id;this.fetchLocalDb("reviews",a).then(function(e){e.push(t),n.putLocalDb(e,"reviews",a)})}},{key:"DATABASE_URL",get:function(){return"http://localhost:".concat(1337)}},{key:"dbPromise",get:function(){return idb.open("restaurandDb",3,function(e){switch(e.oldVersion){case 0:e.createObjectStore("restaurants");case 1:e.createObjectStore("reviews")}})}}]),r}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
