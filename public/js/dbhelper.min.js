"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function _createClass(e,t,n){return t&&_defineProperties(e.prototype,t),n&&_defineProperties(e,n),e}var DBHelper=function(){function o(){_classCallCheck(this,o)}return _createClass(o,null,[{key:"fetchRestaurants",value:function(n){fetch("".concat(o.DATABASE_URL,"/restaurants")).then(function(e){if(200===e.status)e.json().then(function(e){n(null,e)});else{var t="Request failed. Returned status of ".concat(xhr.status);n(t,null)}}).catch(function(e){})}},{key:"fetchReviews",value:function(n){fetch("".concat(o.DATABASE_URL,"/reviews")).then(function(e){if(200===e.status)e.json().then(function(e){n(null,e)});else{var t="Request failed. Returned status of ".concat(xhr.status);n(t,null)}}).catch(function(e){})}},{key:"fetchRestaurantById",value:function(a,u){o.fetchRestaurants(function(e,t){if(e)u(e,null);else{var n=t.find(function(e){return e.id==a});n?u(null,n):u("Restaurant does not exist",null)}})}},{key:"fetchReviewsByRestaurantId",value:function(e,n){fetch("".concat(o.DATABASE_URL,"/reviews/?restaurant_id=").concat(e)).then(function(e){if(200===e.status)e.json().then(function(e){n(null,e)});else{var t="Request failed. Returned status of ".concat(xhr.status);n(t,null)}}).catch(function(e){})}},{key:"fetchRestaurantByCuisine",value:function(a,u){o.fetchRestaurants(function(e,t){if(e)u(e,null);else{var n=t.filter(function(e){return e.cuisine_type==a});u(null,n)}})}},{key:"fetchRestaurantByNeighborhood",value:function(a,u){o.fetchRestaurants(function(e,t){if(e)u(e,null);else{var n=t.filter(function(e){return e.neighborhood==a});u(null,n)}})}},{key:"fetchRestaurantByCuisineAndNeighborhood",value:function(a,u,r){o.fetchRestaurants(function(e,t){if(e)r(e,null);else{var n=t;"all"!=a&&(n=n.filter(function(e){return e.cuisine_type==a})),"all"!=u&&(n=n.filter(function(e){return e.neighborhood==u})),r(null,n)}})}},{key:"fetchNeighborhoods",value:function(u){o.fetchRestaurants(function(e,n){if(e)u(e,null);else{var a=n.map(function(e,t){return n[t].neighborhood}),t=a.filter(function(e,t){return a.indexOf(e)==t});u(null,t)}})}},{key:"fetchCuisines",value:function(u){o.fetchRestaurants(function(e,n){if(e)u(e,null);else{var a=n.map(function(e,t){return n[t].cuisine_type}),t=a.filter(function(e,t){return a.indexOf(e)==t});u(null,t)}})}},{key:"urlForRestaurant",value:function(e){return"./restaurant.html?id=".concat(e.id)}},{key:"imageUrlForRestaurant",value:function(e){return"public/img/".concat(e.id,".jpg")}},{key:"imageAltforRestaurant",value:function(e){return e.imageAlt}},{key:"mapMarkerForRestaurant",value:function(e,t){var n=new L.marker([e.latlng.lat,e.latlng.lng],{title:e.name,alt:e.name,url:o.urlForRestaurant(e)});return n.addTo(newMap),n}},{key:"sendToggleFav",value:function(e,t){var n="http://localhost:1337/restaurants/".concat(e,"/?is_favorite=").concat(t),a={method:"PUT",mode:"cors",cache:"no-cache",credentials:"same-origin",headers:new Headers({"Content-Type":"application/json"})};this.sendRequest(n,a)}},{key:"addReviews",value:function(e){var t={method:"POST",mode:"cors",cache:"no-cache",credentials:"same-origin",headers:new Headers({"Content-Type":"application/json"}),body:JSON.stringify(e)};this.sendRequest("http://localhost:1337/reviews/",t)}},{key:"sendRequest",value:function(e,t){fetch(e,t).then(function(e){if(!e.ok)throw Error(e.statusText);return e.json()}).then(function(e){console.log("Added",e)}).catch(function(e){return console.log("Failed",e)})}},{key:"DATABASE_URL",get:function(){return"http://localhost:".concat(1337)}}]),o}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
